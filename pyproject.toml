[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cc-status-line"
version = "1.0.0"
description = "Universal, configurable development environment status line"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Ashwini Chaudhary", email = "monty.sinngh@gmail.com"}
]
keywords = ["cli", "status-line", "development", "git", "productivity"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: System :: System Shells",
    "Topic :: Utilities",
]

dependencies = [
    "click>=8.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "ty>=0.0.1a19",
]

[project.urls]
Homepage = "https://github.com/ashwch/cc-status-line"
Repository = "https://github.com/ashwch/cc-status-line"
Issues = "https://github.com/ashwch/cc-status-line/issues"
Documentation = "https://github.com/ashwch/cc-status-line#readme"

[project.scripts]
cc-status-line = "src.cli:main"
ccsl = "src.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ty]
python-version = "3.10"
warn-return-any = true
warn-unused-configs = true
disallow-untyped-defs = true
disallow-incomplete-defs = true
check-untyped-defs = true
no-implicit-optional = true
warn-redundant-casts = true
warn-unused-ignores = true
show-error-codes = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]